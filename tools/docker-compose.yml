services:
  database:
    image: "postgres:14.2-alpine"
    container_name: slr-db
    restart: always
    ports:
      - 5432:5432
    environment:
      - POSTGRES_DB=slr-database
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    volumes:
      - db_data:/var/lib/postgresql/data
    networks:
      - backend
#    secrets:
#      - postgres_password

  app:
    build:
      context: .
      dockerfile: Dockerfile
    image: slr-java-docker
    container_name: slr-app
    ports:
      - "8080:8080"
      - "5005:5005"
    depends_on:
      - database
    networks:
      - frontend
      - backend
#    secrets:
#      - postgres_password

  jenkins:
    image: "jenkins/jenkins:2.319.3-jdk11"
    container_name: slr-jenkins
    ports:
      - "8081:8080"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - jenkins_data:/var/jenkins_home

  sonarqube:
    image: "sonarqube:8.9.9-community"
    container_name: slr-sonarqube
    ports:
      - "9000:9000"
      - "9002:9002"
    volumes:
      - sonarqube_data:/opt/sonarqube

volumes:
  db_data:
  jenkins_data:
    external: true
  sonarqube_data:
    external: true

#secrets:
#  postgres_password:
#    file: ./devsecrets/postgres_password

networks:
  frontend:
  backend: